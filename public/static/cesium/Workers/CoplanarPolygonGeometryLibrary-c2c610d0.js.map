{"version":3,"file":"CoplanarPolygonGeometryLibrary-c2c610d0.js","sources":["../../../../Source/Core/CoplanarPolygonGeometryLibrary.js"],"sourcesContent":["import Cartesian2 from \"./Cartesian2.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport Matrix3 from \"./Matrix3.js\";\r\nimport OrientedBoundingBox from \"./OrientedBoundingBox.js\";\r\n\r\n/**\r\n * @private\r\n */\r\nconst CoplanarPolygonGeometryLibrary = {};\r\n\r\nconst scratchIntersectionPoint = new Cartesian3();\r\nconst scratchXAxis = new Cartesian3();\r\nconst scratchYAxis = new Cartesian3();\r\nconst scratchZAxis = new Cartesian3();\r\nconst obbScratch = new OrientedBoundingBox();\r\n\r\nCoplanarPolygonGeometryLibrary.validOutline = function (positions) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"positions\", positions);\r\n  //>>includeEnd('debug');\r\n\r\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\r\n    positions,\r\n    obbScratch\r\n  );\r\n  const halfAxes = orientedBoundingBox.halfAxes;\r\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\r\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\r\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\r\n\r\n  const xMag = Cartesian3.magnitude(xAxis);\r\n  const yMag = Cartesian3.magnitude(yAxis);\r\n  const zMag = Cartesian3.magnitude(zAxis);\r\n\r\n  // If all the points are on a line return undefined because we can't draw a polygon\r\n  return !(\r\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\r\n    (yMag === 0 && zMag === 0)\r\n  );\r\n};\r\n\r\n// call after removeDuplicates\r\nCoplanarPolygonGeometryLibrary.computeProjectTo2DArguments = function (\r\n  positions,\r\n  centerResult,\r\n  planeAxis1Result,\r\n  planeAxis2Result\r\n) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"positions\", positions);\r\n  Check.defined(\"centerResult\", centerResult);\r\n  Check.defined(\"planeAxis1Result\", planeAxis1Result);\r\n  Check.defined(\"planeAxis2Result\", planeAxis2Result);\r\n  //>>includeEnd('debug');\r\n\r\n  const orientedBoundingBox = OrientedBoundingBox.fromPoints(\r\n    positions,\r\n    obbScratch\r\n  );\r\n  const halfAxes = orientedBoundingBox.halfAxes;\r\n  const xAxis = Matrix3.getColumn(halfAxes, 0, scratchXAxis);\r\n  const yAxis = Matrix3.getColumn(halfAxes, 1, scratchYAxis);\r\n  const zAxis = Matrix3.getColumn(halfAxes, 2, scratchZAxis);\r\n\r\n  const xMag = Cartesian3.magnitude(xAxis);\r\n  const yMag = Cartesian3.magnitude(yAxis);\r\n  const zMag = Cartesian3.magnitude(zAxis);\r\n  const min = Math.min(xMag, yMag, zMag);\r\n\r\n  // If all the points are on a line return undefined because we can't draw a polygon\r\n  if (\r\n    (xMag === 0 && (yMag === 0 || zMag === 0)) ||\r\n    (yMag === 0 && zMag === 0)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  let planeAxis1;\r\n  let planeAxis2;\r\n\r\n  if (min === yMag || min === zMag) {\r\n    planeAxis1 = xAxis;\r\n  }\r\n  if (min === xMag) {\r\n    planeAxis1 = yAxis;\r\n  } else if (min === zMag) {\r\n    planeAxis2 = yAxis;\r\n  }\r\n  if (min === xMag || min === yMag) {\r\n    planeAxis2 = zAxis;\r\n  }\r\n\r\n  Cartesian3.normalize(planeAxis1, planeAxis1Result);\r\n  Cartesian3.normalize(planeAxis2, planeAxis2Result);\r\n  Cartesian3.clone(orientedBoundingBox.center, centerResult);\r\n  return true;\r\n};\r\n\r\nfunction projectTo2D(position, center, axis1, axis2, result) {\r\n  const v = Cartesian3.subtract(position, center, scratchIntersectionPoint);\r\n  const x = Cartesian3.dot(axis1, v);\r\n  const y = Cartesian3.dot(axis2, v);\r\n\r\n  return Cartesian2.fromElements(x, y, result);\r\n}\r\n\r\nCoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction = function (\r\n  center,\r\n  axis1,\r\n  axis2\r\n) {\r\n  return function (positions) {\r\n    const positionResults = new Array(positions.length);\r\n    for (let i = 0; i < positions.length; i++) {\r\n      positionResults[i] = projectTo2D(positions[i], center, axis1, axis2);\r\n    }\r\n\r\n    return positionResults;\r\n  };\r\n};\r\n\r\nCoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction = function (\r\n  center,\r\n  axis1,\r\n  axis2\r\n) {\r\n  return function (position, result) {\r\n    return projectTo2D(position, center, axis1, axis2, result);\r\n  };\r\n};\r\nexport default CoplanarPolygonGeometryLibrary;\r\n"],"names":["CoplanarPolygonGeometryLibrary","scratchIntersectionPoint","Cartesian3","scratchXAxis","scratchYAxis","scratchZAxis","obbScratch","OrientedBoundingBox","projectTo2D","position","center","axis1","axis2","result","v","subtract","x","dot","y","Cartesian2","fromElements","validOutline","positions","Check","defined","halfAxes","fromPoints","xAxis","Matrix3","getColumn","yAxis","zAxis","xMag","magnitude","yMag","zMag","computeProjectTo2DArguments","centerResult","planeAxis1Result","planeAxis2Result","orientedBoundingBox","min","Math","planeAxis1","planeAxis2","normalize","clone","createProjectPointsTo2DFunction","positionResults","Array","length","i","createProjectPointTo2DFunction"],"mappings":"mIASM,MAAAA,EAAiC,GAEjCC,EAA2B,IAAIC,EAAAA,WAC/BC,EAAe,IAAID,EAAAA,WACnBE,EAAe,IAAIF,EAAAA,WACnBG,EAAe,IAAIH,EAAAA,WACnBI,EAAa,IAAIC,EAAAA,oBAoFvB,SAASC,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC,GACnD,MAAMC,EAAIZ,EAAAA,WAAWa,SAASN,EAAUC,EAAQT,GAC1Ce,EAAId,EAAUA,WAACe,IAAIN,EAAOG,GAC1BI,EAAIhB,EAAUA,WAACe,IAAIL,EAAOE,GAEhC,OAAOK,EAAUA,WAACC,aAAaJ,EAAGE,EAAGL,GAvFvCb,EAA+BqB,aAAe,SAAUC,GAEtDC,EAAAA,MAAMC,QAAQ,YAAaF,GAG3B,MAIMG,EAJsBlB,EAAAA,oBAAoBmB,WAC9CJ,EACAhB,GAEmCmB,SAC/BE,EAAQC,EAAAA,QAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,EAAAA,QAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,EAAAA,QAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,EAAAA,WAAW+B,UAAUN,GAC5BO,EAAOhC,EAAAA,WAAW+B,UAAUH,GAC5BK,EAAOjC,EAAAA,WAAW+B,UAAUF,GAGlC,QACY,IAATC,IAAwB,IAATE,GAAuB,IAATC,IACpB,IAATD,GAAuB,IAATC,IAKnBnC,EAA+BoC,4BAA8B,SAC3Dd,EACAe,EACAC,EACAC,GAGAhB,EAAAA,MAAMC,QAAQ,YAAaF,GAC3BC,EAAAA,MAAMC,QAAQ,eAAgBa,GAC9Bd,EAAAA,MAAMC,QAAQ,mBAAoBc,GAClCf,EAAAA,MAAMC,QAAQ,mBAAoBe,GAGlC,MAAMC,EAAsBjC,EAAAA,oBAAoBmB,WAC9CJ,EACAhB,GAEImB,EAAWe,EAAoBf,SAC/BE,EAAQC,EAAAA,QAAQC,UAAUJ,EAAU,EAAGtB,GACvC2B,EAAQF,EAAAA,QAAQC,UAAUJ,EAAU,EAAGrB,GACvC2B,EAAQH,EAAAA,QAAQC,UAAUJ,EAAU,EAAGpB,GAEvC2B,EAAO9B,EAAAA,WAAW+B,UAAUN,GAC5BO,EAAOhC,EAAAA,WAAW+B,UAAUH,GAC5BK,EAAOjC,EAAAA,WAAW+B,UAAUF,GAC5BU,EAAMC,KAAKD,IAAIT,EAAME,EAAMC,GAGjC,GACY,IAATH,IAAwB,IAATE,GAAuB,IAATC,IACpB,IAATD,GAAuB,IAATC,EAEf,OAAO,EAGT,IAAIQ,EACAC,EAiBJ,OAfIH,IAAQP,GAAQO,IAAQN,IAC1BQ,EAAahB,GAEXc,IAAQT,EACVW,EAAab,EACJW,IAAQN,IACjBS,EAAad,GAEXW,IAAQT,GAAQS,IAAQP,IAC1BU,EAAab,GAGf7B,EAAAA,WAAW2C,UAAUF,EAAYL,GACjCpC,EAAAA,WAAW2C,UAAUD,EAAYL,GACjCrC,EAAAA,WAAW4C,MAAMN,EAAoB9B,OAAQ2B,IACtC,GAWTrC,EAA+B+C,gCAAkC,SAC/DrC,EACAC,EACAC,GAEA,OAAO,SAAUU,GACf,MAAM0B,EAAkB,IAAIC,MAAM3B,EAAU4B,QAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAI7B,EAAU4B,OAAQC,IACpCH,EAAgBG,GAAK3C,EAAYc,EAAU6B,GAAIzC,EAAQC,EAAOC,GAGhE,OAAOoC,IAIXhD,EAA+BoD,+BAAiC,SAC9D1C,EACAC,EACAC,GAEA,OAAO,SAAUH,EAAUI,GACzB,OAAOL,EAAYC,EAAUC,EAAQC,EAAOC,EAAOC"}