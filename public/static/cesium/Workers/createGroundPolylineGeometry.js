define(["./Transforms-f586e93e","./Matrix2-fb98ca95","./RuntimeError-ac440aa5","./defaultValue-69ee94f4","./ComponentDatatype-7ed489c0","./ArcType-e1641d8d","./arrayRemoveDuplicates-6810f093","./EllipsoidGeodesic-093468e6","./EllipsoidRhumbLine-99a9f0c8","./EncodedCartesian3-928e138a","./GeometryAttribute-c6fd2455","./IntersectionTests-2d241d2b","./Plane-a09326f5","./WebMercatorProjection-02959b6e","./_commonjsHelpers-3aae1032-15991586","./combine-0259f56f","./WebGLConstants-f63312fc"],(function(e,t,a,n,i,r,s,o,l,c,u,C,p,d,h,g,f){"use strict";function m(a){a=n.defaultValue(a,n.defaultValue.EMPTY_OBJECT),this._ellipsoid=n.defaultValue(a.ellipsoid,t.Ellipsoid.WGS84),this._rectangle=n.defaultValue(a.rectangle,t.Rectangle.MAX_VALUE),this._projection=new e.GeographicProjection(this._ellipsoid),this._numberOfLevelZeroTilesX=n.defaultValue(a.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=n.defaultValue(a.numberOfLevelZeroTilesY,1)}Object.defineProperties(m.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),m.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},m.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},m.prototype.rectangleToNativeRectangle=function(e,r){a.Check.defined("rectangle",e);const s=i.CesiumMath.toDegrees(e.west),o=i.CesiumMath.toDegrees(e.south),l=i.CesiumMath.toDegrees(e.east),c=i.CesiumMath.toDegrees(e.north);return n.defined(r)?(r.west=s,r.south=o,r.east=l,r.north=c,r):new t.Rectangle(s,o,l,c)},m.prototype.tileXYToNativeRectangle=function(e,t,a,n){const r=this.tileXYToRectangle(e,t,a,n);return r.west=i.CesiumMath.toDegrees(r.west),r.south=i.CesiumMath.toDegrees(r.south),r.east=i.CesiumMath.toDegrees(r.east),r.north=i.CesiumMath.toDegrees(r.north),r},m.prototype.tileXYToRectangle=function(e,a,i,r){const s=this._rectangle,o=this.getNumberOfXTilesAtLevel(i),l=this.getNumberOfYTilesAtLevel(i),c=s.width/o,u=e*c+s.west,C=(e+1)*c+s.west,p=s.height/l,d=s.north-a*p,h=s.north-(a+1)*p;return n.defined(r)||(r=new t.Rectangle(u,h,C,d)),r.west=u,r.south=h,r.east=C,r.north=d,r},m.prototype.positionToTileXY=function(e,a,r){const s=this._rectangle;if(!t.Rectangle.contains(s,e))return;const o=this.getNumberOfXTilesAtLevel(a),l=this.getNumberOfYTilesAtLevel(a),c=s.width/o,u=s.height/l;let C=e.longitude;s.east<s.west&&(C+=i.CesiumMath.TWO_PI);let p=(C-s.west)/c|0;p>=o&&(p=o-1);let d=(s.north-e.latitude)/u|0;return d>=l&&(d=l-1),n.defined(r)?(r.x=p,r.y=d,r):new t.Cartesian2(p,d)};const w=new t.Cartesian3,y=new t.Cartesian3,T=new t.Cartographic,E=new t.Cartesian3,M=new t.Cartesian3,_=new e.BoundingSphere,O=new m,A=[new t.Cartographic,new t.Cartographic,new t.Cartographic,new t.Cartographic],k=new t.Cartesian2,b={};function P(e){t.Cartographic.fromRadians(e.east,e.north,0,A[0]),t.Cartographic.fromRadians(e.west,e.north,0,A[1]),t.Cartographic.fromRadians(e.east,e.south,0,A[2]),t.Cartographic.fromRadians(e.west,e.south,0,A[3]);let a=0,n=0,i=0,r=0;const s=b._terrainHeightsMaxLevel;let o;for(o=0;o<=s;++o){let e=!1;for(let t=0;t<4;++t){const a=A[t];if(O.positionToTileXY(a,o,k),0===t)i=k.x,r=k.y;else if(i!==k.x||r!==k.y){e=!0;break}}if(e)break;a=i,n=r}if(0!==o)return{x:a,y:n,level:o>s?s:o-1}}b.initialize=function(){let t=b._initPromise;return n.defined(t)||(t=e.Resource.fetchJson(e.buildModuleUrl("Assets/approximateTerrainHeights.json")).then((function(e){b._terrainHeights=e})),b._initPromise=t),t},b.getMinimumMaximumHeights=function(e,i){if(a.Check.defined("rectangle",e),!n.defined(b._terrainHeights))throw new a.DeveloperError("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");i=n.defaultValue(i,t.Ellipsoid.WGS84);const r=P(e);let s=b._defaultMinTerrainHeight,o=b._defaultMaxTerrainHeight;if(n.defined(r)){const a=`${r.level}-${r.x}-${r.y}`,l=b._terrainHeights[a];n.defined(l)&&(s=l[0],o=l[1]),i.cartographicToCartesian(t.Rectangle.northeast(e,T),w),i.cartographicToCartesian(t.Rectangle.southwest(e,T),y),t.Cartesian3.midpoint(y,w,E);const c=i.scaleToGeodeticSurface(E,M);if(n.defined(c)){const e=t.Cartesian3.distance(E,c);s=Math.min(s,-e)}else s=b._defaultMinTerrainHeight}return s=Math.max(b._defaultMinTerrainHeight,s),{minimumTerrainHeight:s,maximumTerrainHeight:o}},b.getBoundingSphere=function(i,r){if(a.Check.defined("rectangle",i),!n.defined(b._terrainHeights))throw new a.DeveloperError("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");r=n.defaultValue(r,t.Ellipsoid.WGS84);const s=P(i);let o=b._defaultMaxTerrainHeight;if(n.defined(s)){const e=`${s.level}-${s.x}-${s.y}`,t=b._terrainHeights[e];n.defined(t)&&(o=t[1])}const l=e.BoundingSphere.fromRectangle3D(i,r,0);return e.BoundingSphere.fromRectangle3D(i,r,o,_),e.BoundingSphere.union(l,_,l)},b._terrainHeightsMaxLevel=6,b._defaultMaxTerrainHeight=9e3,b._defaultMinTerrainHeight=-1e5,b._terrainHeights=void 0,b._initPromise=void 0,Object.defineProperties(b,{initialized:{get:function(){return n.defined(b._terrainHeights)}}});const S=[e.GeographicProjection,d.WebMercatorProjection],L=S.length,x=Math.cos(i.CesiumMath.toRadians(30)),I=Math.cos(i.CesiumMath.toRadians(150));function D(e){const i=(e=n.defaultValue(e,n.defaultValue.EMPTY_OBJECT)).positions;if(!n.defined(i)||i.length<2)throw new a.DeveloperError("At least two positions are required.");if(n.defined(e.arcType)&&e.arcType!==r.ArcType.GEODESIC&&e.arcType!==r.ArcType.RHUMB)throw new a.DeveloperError("Valid options for arcType are ArcType.GEODESIC and ArcType.RHUMB.");this.width=n.defaultValue(e.width,1),this._positions=i,this.granularity=n.defaultValue(e.granularity,9999),this.loop=n.defaultValue(e.loop,!1),this.arcType=n.defaultValue(e.arcType,r.ArcType.GEODESIC),this._ellipsoid=t.Ellipsoid.WGS84,this._projectionIndex=0,this._workerName="createGroundPolylineGeometry",this._scene3DOnly=!1}Object.defineProperties(D.prototype,{packedLength:{get:function(){return 1+3*this._positions.length+1+1+1+t.Ellipsoid.packedLength+1+1}}}),D.setProjectionAndEllipsoid=function(e,t){let a=0;for(let e=0;e<L;e++)if(t instanceof S[e]){a=e;break}e._projectionIndex=a,e._ellipsoid=t.ellipsoid};const N=new t.Cartesian3,R=new t.Cartesian3,v=new t.Cartesian3;function H(e,a,n,i,r){const s=q(i,e,0,N),o=q(i,e,n,R),l=q(i,a,0,v),c=F(o,s,R),u=F(l,s,v);return t.Cartesian3.cross(u,c,r),t.Cartesian3.normalize(r,r)}const z=new t.Cartographic,B=new t.Cartesian3,j=new t.Cartesian3,G=new t.Cartesian3;function V(e,a,n,i,s,c,u,C,p,d,h){if(0===s)return;let g;c===r.ArcType.GEODESIC?g=new o.EllipsoidGeodesic(e,a,u):c===r.ArcType.RHUMB&&(g=new l.EllipsoidRhumbLine(e,a,u));const f=g.surfaceDistance;if(f<s)return;const m=H(e,a,i,u,G),w=Math.ceil(f/s),y=f/w;let T=y;const E=w-1;let M=C.length;for(let e=0;e<E;e++){const e=g.interpolateUsingSurfaceDistance(T,z),a=q(u,e,n,B),r=q(u,e,i,j);t.Cartesian3.pack(m,C,M),t.Cartesian3.pack(a,p,M),t.Cartesian3.pack(r,d,M),h.push(e.latitude),h.push(e.longitude),M+=3,T+=y}}const Y=new t.Cartographic;function q(e,a,n,i){return t.Cartographic.clone(a,Y),Y.height=n,t.Cartographic.toCartesian(Y,e,i)}function F(e,a,n){return t.Cartesian3.subtract(e,a,n),t.Cartesian3.normalize(n,n),n}function X(e,a,n,i){return i=F(e,a,i),i=t.Cartesian3.cross(i,n,i),i=t.Cartesian3.normalize(i,i),i=t.Cartesian3.cross(n,i,i)}D.pack=function(e,i,r){a.Check.typeOf.object("value",e),a.Check.defined("array",i);let s=n.defaultValue(r,0);const o=e._positions,l=o.length;i[s++]=l;for(let e=0;e<l;++e){const a=o[e];t.Cartesian3.pack(a,i,s),s+=3}return i[s++]=e.granularity,i[s++]=e.loop?1:0,i[s++]=e.arcType,t.Ellipsoid.pack(e._ellipsoid,i,s),s+=t.Ellipsoid.packedLength,i[s++]=e._projectionIndex,i[s++]=e._scene3DOnly?1:0,i},D.unpack=function(e,i,r){a.Check.defined("array",e);let s=n.defaultValue(i,0);const o=e[s++],l=new Array(o);for(let a=0;a<o;a++)l[a]=t.Cartesian3.unpack(e,s),s+=3;const c=e[s++],u=1===e[s++],C=e[s++],p=t.Ellipsoid.unpack(e,s);s+=t.Ellipsoid.packedLength;const d=e[s++],h=1===e[s++];return n.defined(r)||(r=new D({positions:l})),r._positions=l,r.granularity=c,r.loop=u,r.arcType=C,r._ellipsoid=p,r._projectionIndex=d,r._scene3DOnly=h,r};const U=new t.Cartesian3,W=new t.Cartesian3,Z=new t.Cartesian3,$=new t.Cartesian3;function J(e,a,n,r,s){const o=F(n,a,$),l=X(e,a,o,U),c=X(r,a,o,W);if(i.CesiumMath.equalsEpsilon(t.Cartesian3.dot(l,c),-1,i.CesiumMath.EPSILON5))return s=t.Cartesian3.cross(o,l,s),s=t.Cartesian3.normalize(s,s);s=t.Cartesian3.add(c,l,s),s=t.Cartesian3.normalize(s,s);const u=t.Cartesian3.cross(o,s,Z);return t.Cartesian3.dot(c,u)<0&&(s=t.Cartesian3.negate(s,s)),s}const Q=p.Plane.fromPointNormal(t.Cartesian3.ZERO,t.Cartesian3.UNIT_Y),K=new t.Cartesian3,ee=new t.Cartesian3,te=new t.Cartesian3,ae=new t.Cartesian3,ne=new t.Cartesian3,ie=new t.Cartesian3,re=new t.Cartographic,se=new t.Cartographic,oe=new t.Cartographic;D.createGeometry=function(a){const o=!a._scene3DOnly;let p=a.loop;const d=a._ellipsoid,h=a.granularity,g=a.arcType,f=new S[a._projectionIndex](d),m=1e3;let w,y;const T=a._positions,E=T.length;let M,_,O,A;2===E&&(p=!1);const k=new l.EllipsoidRhumbLine(void 0,void 0,d);let P,L,I;const D=[T[0]];for(y=0;y<E-1;y++)M=T[y],_=T[y+1],P=C.IntersectionTests.lineSegmentPlane(M,_,Q,ie),!n.defined(P)||t.Cartesian3.equalsEpsilon(P,M,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(P,_,i.CesiumMath.EPSILON7)||(a.arcType===r.ArcType.GEODESIC?D.push(t.Cartesian3.clone(P)):a.arcType===r.ArcType.RHUMB&&(I=d.cartesianToCartographic(P,re).longitude,O=d.cartesianToCartographic(M,re),A=d.cartesianToCartographic(_,se),k.setEndPoints(O,A),L=k.findIntersectionWithLongitude(I,oe),P=d.cartographicToCartesian(L,ie),!n.defined(P)||t.Cartesian3.equalsEpsilon(P,M,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(P,_,i.CesiumMath.EPSILON7)||D.push(t.Cartesian3.clone(P)))),D.push(_);p&&(M=T[E-1],_=T[0],P=C.IntersectionTests.lineSegmentPlane(M,_,Q,ie),!n.defined(P)||t.Cartesian3.equalsEpsilon(P,M,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(P,_,i.CesiumMath.EPSILON7)||(a.arcType===r.ArcType.GEODESIC?D.push(t.Cartesian3.clone(P)):a.arcType===r.ArcType.RHUMB&&(I=d.cartesianToCartographic(P,re).longitude,O=d.cartesianToCartographic(M,re),A=d.cartesianToCartographic(_,se),k.setEndPoints(O,A),L=k.findIntersectionWithLongitude(I,oe),P=d.cartographicToCartesian(L,ie),!n.defined(P)||t.Cartesian3.equalsEpsilon(P,M,i.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(P,_,i.CesiumMath.EPSILON7)||D.push(t.Cartesian3.clone(P)))));let N=D.length,R=new Array(N);for(y=0;y<N;y++){const e=t.Cartographic.fromCartesian(D[y],d);e.height=0,R[y]=e}if(R=s.arrayRemoveDuplicates(R,t.Cartographic.equalsEpsilon),N=R.length,N<2)return;const v=[],z=[],B=[],j=[];let G=K,Y=ee,X=te,U=ae,W=ne;const Z=R[0],$=R[1];for(G=q(d,R[N-1],0,G),U=q(d,$,0,U),Y=q(d,Z,0,Y),X=q(d,Z,m,X),W=p?J(G,Y,X,U,W):H(Z,$,m,d,W),t.Cartesian3.pack(W,z,0),t.Cartesian3.pack(Y,B,0),t.Cartesian3.pack(X,j,0),v.push(Z.latitude),v.push(Z.longitude),V(Z,$,0,m,h,g,d,z,B,j,v),y=1;y<N-1;++y){G=t.Cartesian3.clone(Y,G),Y=t.Cartesian3.clone(U,Y);const e=R[y];q(d,e,m,X),q(d,R[y+1],0,U),J(G,Y,X,U,W),w=z.length,t.Cartesian3.pack(W,z,w),t.Cartesian3.pack(Y,B,w),t.Cartesian3.pack(X,j,w),v.push(e.latitude),v.push(e.longitude),V(R[y],R[y+1],0,m,h,g,d,z,B,j,v)}const le=R[N-1],ce=R[N-2];if(Y=q(d,le,0,Y),X=q(d,le,m,X),p){const e=R[0];G=q(d,ce,0,G),U=q(d,e,0,U),W=J(G,Y,X,U,W)}else W=H(ce,le,m,d,W);if(w=z.length,t.Cartesian3.pack(W,z,w),t.Cartesian3.pack(Y,B,w),t.Cartesian3.pack(X,j,w),v.push(le.latitude),v.push(le.longitude),p){for(V(le,Z,0,m,h,g,d,z,B,j,v),w=z.length,y=0;y<3;++y)z[w+y]=z[y],B[w+y]=B[y],j[w+y]=j[y];v.push(Z.latitude),v.push(Z.longitude)}return function(a,n,r,s,o,l,C){let p,d;const h=n._ellipsoid,g=r.length/3-1,f=8*g,m=4*f,w=36*g,y=f>65535?new Uint32Array(w):new Uint16Array(w),T=new Float64Array(3*f),E=new Float32Array(m),M=new Float32Array(m),_=new Float32Array(m),O=new Float32Array(m),A=new Float32Array(m);let k,P,S,L;C&&(k=new Float32Array(m),P=new Float32Array(m),S=new Float32Array(m),L=new Float32Array(2*f));const I=l.length/2;let D=0;const N=Me;N.height=0;const R=_e;R.height=0;let v=Oe,H=Ae;if(C)for(d=0,p=1;p<I;p++)N.latitude=l[d],N.longitude=l[d+1],R.latitude=l[d+2],R.longitude=l[d+3],v=n.project(N,v),H=n.project(R,H),D+=t.Cartesian3.distance(v,H),d+=2;const z=s.length/3;H=t.Cartesian3.unpack(s,0,H);let B,j=0;for(d=3,p=1;p<z;p++)v=t.Cartesian3.clone(H,v),H=t.Cartesian3.unpack(s,d,H),j+=t.Cartesian3.distance(v,H),d+=3;d=3;let G=0,V=0,Y=0,q=0,X=!1,U=t.Cartesian3.unpack(r,0,be),W=t.Cartesian3.unpack(s,0,Ae),Z=t.Cartesian3.unpack(o,0,Se);if(a){Ce(Z,t.Cartesian3.unpack(r,r.length-6,ke),U,W)&&(Z=t.Cartesian3.negate(Z,Z))}let $=0,J=0,Q=0;for(p=0;p<g;p++){const e=t.Cartesian3.clone(U,ke),a=t.Cartesian3.clone(W,Oe);let u,p,g,f,m=t.Cartesian3.clone(Z,Pe);if(X&&(m=t.Cartesian3.negate(m,m)),U=t.Cartesian3.unpack(r,d,be),W=t.Cartesian3.unpack(s,d,Ae),Z=t.Cartesian3.unpack(o,d,Se),X=Ce(Z,e,U,W),N.latitude=l[G],N.longitude=l[G+1],R.latitude=l[G+2],R.longitude=l[G+3],C){const e=Ee(N,R);u=n.project(N,ve),p=n.project(R,He);const a=F(p,u,We);a.y=Math.abs(a.y),g=ze,f=Be,0===e||t.Cartesian3.dot(a,t.Cartesian3.UNIT_Y)>x?(g=ge(n,N,m,u,ze),f=ge(n,R,Z,p,Be)):1===e?(f=ge(n,R,Z,p,Be),g.x=0,g.y=i.CesiumMath.sign(N.longitude-Math.abs(R.longitude)),g.z=0):(g=ge(n,N,m,u,ze),f.x=0,f.y=i.CesiumMath.sign(N.longitude-R.longitude),f.z=0)}const w=t.Cartesian3.distance(a,W),y=c.EncodedCartesian3.fromCartesian(e,Xe),I=t.Cartesian3.subtract(U,e,je),v=t.Cartesian3.normalize(I,Ye);let H=t.Cartesian3.subtract(a,e,Ge);H=t.Cartesian3.normalize(H,H);let z=t.Cartesian3.cross(v,H,Ye);z=t.Cartesian3.normalize(z,z);let K=t.Cartesian3.cross(H,m,qe);K=t.Cartesian3.normalize(K,K);let ee=t.Cartesian3.subtract(W,U,Ve);ee=t.Cartesian3.normalize(ee,ee);let te=t.Cartesian3.cross(Z,ee,Fe);te=t.Cartesian3.normalize(te,te);const ae=w/j,ne=$/j;let ie,re,se,oe=0,le=0,ce=0;if(C){oe=t.Cartesian3.distance(u,p),ie=c.EncodedCartesian3.fromCartesian(u,Ue),re=t.Cartesian3.subtract(p,u,We),se=t.Cartesian3.normalize(re,Ze);const e=se.x;se.x=se.y,se.y=-e,le=oe/D,ce=J/D}for(B=0;B<8;B++){const e=q+4*B,a=V+2*B,n=e+3,i=B<4?1:-1,r=2===B||3===B||6===B||7===B?1:-1;t.Cartesian3.pack(y.high,E,e),E[n]=I.x,t.Cartesian3.pack(y.low,M,e),M[n]=I.y,t.Cartesian3.pack(K,_,e),_[n]=I.z,t.Cartesian3.pack(te,O,e),O[n]=ae*i,t.Cartesian3.pack(z,A,e);let s=ne*r;0===s&&r<0&&(s=9),A[n]=s,C&&(k[e]=ie.high.x,k[e+1]=ie.high.y,k[e+2]=ie.low.x,k[e+3]=ie.low.y,S[e]=-g.y,S[e+1]=g.x,S[e+2]=f.y,S[e+3]=-f.x,P[e]=re.x,P[e+1]=re.y,P[e+2]=se.x,P[e+3]=se.y,L[a]=le*i,s=ce*r,0===s&&r<0&&(s=9),L[a+1]=s)}const ue=Ne,pe=Re,de=Ie,he=De,fe=t.Rectangle.fromCartographicArray(Le,xe),me=b.getMinimumMaximumHeights(fe,h),ye=me.minimumTerrainHeight,Me=me.maximumTerrainHeight;Q+=ye,Q+=Me,we(e,a,ye,Me,ue,de),we(U,W,ye,Me,pe,he);let _e=t.Cartesian3.multiplyByScalar(z,i.CesiumMath.EPSILON5,$e);t.Cartesian3.add(ue,_e,ue),t.Cartesian3.add(pe,_e,pe),t.Cartesian3.add(de,_e,de),t.Cartesian3.add(he,_e,he),Te(ue,pe),Te(de,he),t.Cartesian3.pack(ue,T,Y),t.Cartesian3.pack(pe,T,Y+3),t.Cartesian3.pack(he,T,Y+6),t.Cartesian3.pack(de,T,Y+9),_e=t.Cartesian3.multiplyByScalar(z,-2*i.CesiumMath.EPSILON5,$e),t.Cartesian3.add(ue,_e,ue),t.Cartesian3.add(pe,_e,pe),t.Cartesian3.add(de,_e,de),t.Cartesian3.add(he,_e,he),Te(ue,pe),Te(de,he),t.Cartesian3.pack(ue,T,Y+12),t.Cartesian3.pack(pe,T,Y+15),t.Cartesian3.pack(he,T,Y+18),t.Cartesian3.pack(de,T,Y+21),G+=2,d+=3,V+=16,Y+=24,q+=32,$+=w,J+=oe}d=0;let K=0;for(p=0;p<g;p++){for(B=0;B<Ke;B++)y[d+B]=Qe[B]+K;K+=8,d+=Ke}const ee=Je;e.BoundingSphere.fromVertices(r,t.Cartesian3.ZERO,3,ee[0]),e.BoundingSphere.fromVertices(s,t.Cartesian3.ZERO,3,ee[1]);const te=e.BoundingSphere.fromBoundingSpheres(ee);te.radius+=Q/(2*g);const ae={position:new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,normalize:!1,values:T}),startHiAndForwardOffsetX:et(E),startLoAndForwardOffsetY:et(M),startNormalAndForwardOffsetZ:et(_),endNormalAndTextureCoordinateNormalizationX:et(O),rightNormalAndTextureCoordinateNormalizationY:et(A)};C&&(ae.startHiLo2D=et(k),ae.offsetAndRight2D=et(P),ae.startEndNormals2D=et(S),ae.texcoordNormalization2D=new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,normalize:!1,values:L}));return new u.Geometry({attributes:ae,indices:y,boundingSphere:te})}(p,f,B,j,z,v,o)};const le=new t.Cartesian3,ce=new t.Matrix3,ue=new e.Quaternion;function Ce(a,n,r,s){const o=F(r,n,le),l=t.Cartesian3.dot(o,a);if(l>x||l<I){const n=F(s,r,$),o=l<I?i.CesiumMath.PI_OVER_TWO:-i.CesiumMath.PI_OVER_TWO,c=e.Quaternion.fromAxisAngle(n,o,ue),u=t.Matrix3.fromQuaternion(c,ce);return t.Matrix3.multiplyByVector(u,a,a),!0}return!1}const pe=new t.Cartographic,de=new t.Cartesian3,he=new t.Cartesian3;function ge(e,a,n,r,s){const o=t.Cartographic.toCartesian(a,e._ellipsoid,de);let l=t.Cartesian3.add(o,n,he),c=!1;const u=e._ellipsoid;let C=u.cartesianToCartographic(l,pe);Math.abs(a.longitude-C.longitude)>i.CesiumMath.PI_OVER_TWO&&(c=!0,l=t.Cartesian3.subtract(o,n,he),C=u.cartesianToCartographic(l,pe)),C.height=0;const p=e.project(C,s);return(s=t.Cartesian3.subtract(p,r,s)).z=0,s=t.Cartesian3.normalize(s,s),c&&t.Cartesian3.negate(s,s),s}const fe=new t.Cartesian3,me=new t.Cartesian3;function we(e,a,n,i,r,s){const o=t.Cartesian3.subtract(a,e,fe);t.Cartesian3.normalize(o,o);const l=n-0;let c=t.Cartesian3.multiplyByScalar(o,l,me);t.Cartesian3.add(e,c,r);const u=i-1e3;c=t.Cartesian3.multiplyByScalar(o,u,me),t.Cartesian3.add(a,c,s)}const ye=new t.Cartesian3;function Te(e,a){const n=p.Plane.getPointDistance(Q,e),r=p.Plane.getPointDistance(Q,a);let s=ye;i.CesiumMath.equalsEpsilon(n,0,i.CesiumMath.EPSILON2)?(s=F(a,e,s),t.Cartesian3.multiplyByScalar(s,i.CesiumMath.EPSILON2,s),t.Cartesian3.add(e,s,e)):i.CesiumMath.equalsEpsilon(r,0,i.CesiumMath.EPSILON2)&&(s=F(e,a,s),t.Cartesian3.multiplyByScalar(s,i.CesiumMath.EPSILON2,s),t.Cartesian3.add(a,s,a))}function Ee(e,t){const a=Math.abs(e.longitude),n=Math.abs(t.longitude);if(i.CesiumMath.equalsEpsilon(a,i.CesiumMath.PI,i.CesiumMath.EPSILON11)){const n=i.CesiumMath.sign(t.longitude);return e.longitude=n*(a-i.CesiumMath.EPSILON11),1}if(i.CesiumMath.equalsEpsilon(n,i.CesiumMath.PI,i.CesiumMath.EPSILON11)){const a=i.CesiumMath.sign(e.longitude);return t.longitude=a*(n-i.CesiumMath.EPSILON11),2}return 0}const Me=new t.Cartographic,_e=new t.Cartographic,Oe=new t.Cartesian3,Ae=new t.Cartesian3,ke=new t.Cartesian3,be=new t.Cartesian3,Pe=new t.Cartesian3,Se=new t.Cartesian3,Le=[Me,_e],xe=new t.Rectangle,Ie=new t.Cartesian3,De=new t.Cartesian3,Ne=new t.Cartesian3,Re=new t.Cartesian3,ve=new t.Cartesian3,He=new t.Cartesian3,ze=new t.Cartesian3,Be=new t.Cartesian3,je=new t.Cartesian3,Ge=new t.Cartesian3,Ve=new t.Cartesian3,Ye=new t.Cartesian3,qe=new t.Cartesian3,Fe=new t.Cartesian3,Xe=new c.EncodedCartesian3,Ue=new c.EncodedCartesian3,We=new t.Cartesian3,Ze=new t.Cartesian3,$e=new t.Cartesian3,Je=[new e.BoundingSphere,new e.BoundingSphere],Qe=[0,2,1,0,3,2,0,7,3,0,4,7,0,5,4,0,1,5,5,7,4,5,6,7,5,2,6,5,1,2,3,6,2,3,7,6],Ke=Qe.length;function et(e){return new u.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:4,normalize:!1,values:e})}return D._projectNormal=ge,function(e,t){return b.initialize().then((function(){return n.defined(t)&&(e=D.unpack(e,t)),D.createGeometry(e)}))}}));
//# sourceMappingURL=createGroundPolylineGeometry.js.map
